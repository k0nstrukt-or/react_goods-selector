{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","addProduct","product","setState","removeProduct","productIndex","findIndex","good","slice","renderSelectedProducts","length","concat","join","isProductSelected","find","clear","this","className","goodsFromServer","map","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCDIA,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,W,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI5CE,cAAgB,SAACF,GACf,IAAMG,EAAe,EAAKN,MAAMC,cAC7BM,WAAU,SAAAC,GAAI,OAAIA,IAASL,KAE9B,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBACPD,EAAMC,cAAcQ,MAAM,EAAGH,IADtB,YAENN,EAAMC,cAAcQ,MAAMH,EAAe,U,EAIpDI,uBAAyB,WACvB,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAKA,EAAcU,OAIU,IAAzBV,EAAcU,OACTV,EAAcW,OAAO,iBAGvBX,EAAcQ,MAAM,GAAI,GAC5BI,KAAK,MAAMD,OADP,eACsBX,EAAcA,EAAcU,OAAS,GAD3D,mBAPE,sB,EAWXG,kBAAoB,SAACX,GACnB,OAAO,EAAKH,MAAMC,cAAcc,MAAK,SAAAP,GAAI,OAAIA,IAASL,M,EAGxDa,MAAQ,WACN,EAAKZ,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBgB,KAAKjB,MAAvBC,cAER,OACE,sBAAKiB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKP,2BAEPS,EAAgBR,OAAS,GACxB,oBAAIO,UAAU,oBAAd,SACGC,EAAgBC,KAAI,SAAAjB,GAAO,OAC1B,qBAAkBe,UAAU,mBAA5B,UACE,qBAAKA,UAAS,wBACZ,EAAKJ,kBAAkBX,GACnB,SACA,IAHN,SAMGA,IAEF,EAAKW,kBAAkBX,GACtB,wBACEe,UAAU,uBACVG,KAAK,SACLC,QAAS,WACP,EAAKjB,cAAcF,IAJvB,oBAUA,wBACEe,UAAU,oBACVG,KAAK,SACLC,QAAS,kBAAM,EAAKpB,WAAWC,IAHjC,mBApBKA,QAiCdF,EAAcU,OAAS,GACtB,wBACEO,UAAU,sBACVG,KAAK,SACLC,QAASL,KAAKD,MAHhB,0B,GA1FQO,IAAMC,WAuGTzB,IC7Gf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b24a9f5d.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Carrot'],\n  };\n\n  addProduct = (product: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, product],\n    }));\n  };\n\n  removeProduct = (product: string) => {\n    const productIndex = this.state.selectedGoods\n      .findIndex(good => good === product);\n\n    this.setState((state) => ({\n      selectedGoods:\n        [...state.selectedGoods.slice(0, productIndex),\n          ...state.selectedGoods.slice(productIndex + 1)],\n    }));\n  };\n\n  renderSelectedProducts = () => {\n    const { selectedGoods } = this.state;\n\n    if (!selectedGoods.length) {\n      return 'No goods selected.';\n    }\n\n    if (selectedGoods.length === 1) {\n      return selectedGoods.concat(' is selected.');\n    }\n\n    return selectedGoods.slice(0, -1)\n      .join(', ').concat(` and ${selectedGoods[selectedGoods.length - 1]} are selected.`);\n  };\n\n  isProductSelected = (product: string) => {\n    return this.state.selectedGoods.find(good => good === product);\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {this.renderSelectedProducts()}\n        </h1>\n        {goodsFromServer.length > 0 && (\n          <ul className=\"App__list product\">\n            {goodsFromServer.map(product => (\n              <li key={product} className=\"product__element\">\n                <div className={`product__item ${\n                  this.isProductSelected(product)\n                    ? 'active'\n                    : ''\n                }`}\n                >\n                  {product}\n                </div>\n                {this.isProductSelected(product) ? (\n                  <button\n                    className=\"button button-remove\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.removeProduct(product);\n                    }}\n                  >\n                    Remove\n                  </button>\n                ) : (\n                  <button\n                    className=\"button button-add\"\n                    type=\"button\"\n                    onClick={() => this.addProduct(product)}\n                  >\n                    Add\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {selectedGoods.length > 0 && (\n          <button\n            className=\"button button-clear\"\n            type=\"button\"\n            onClick={this.clear}\n          >\n            Clear\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}